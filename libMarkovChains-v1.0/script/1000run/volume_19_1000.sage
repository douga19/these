# COUNT ONLY UPDATED STATES WITH ADDING OR DELETION OF A VERTEX
# K=19, RUN=1000

list_19_1000 = [Polyhedron(vertices = [[13,16],[6,12],[2,2],[1,4],[14,2],[9,0],[5,0],[16,7],[16,12],[10,16],[12,17],[4,9]]),Polyhedron(vertices = [[13,16],[6,12],[2,2],[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[4,9]]),Polyhedron(vertices = [[13,16],[6,12],[2,2],[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[4,9],[10,0]]),Polyhedron(vertices = [[13,16],[6,12],[2,2],[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0]]),Polyhedron(vertices = [[13,16],[6,12],[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0]]),Polyhedron(vertices = [[6,12],[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0],[0,8]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0],[0,8],[6,13]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,7],[16,12],[10,16],[12,17],[10,0],[6,13]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8]]),Polyhedron(vertices = [[1,4],[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8],[16,5]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8],[16,5]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8],[16,5],[1,7]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8],[16,5],[1,7],[3,1]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[15,17],[1,8],[16,5],[1,7],[3,1],[2,2]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[1,8],[16,5],[1,7],[3,1],[2,2]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[1,8],[16,5],[1,7],[3,1],[2,2],[13,16]]),Polyhedron(vertices = [[14,2],[5,0],[16,12],[10,16],[12,17],[10,0],[6,13],[1,8],[16,5],[1,7],[3,1],[2,2],[13,16],[17,7]]),Polyhedron(vertices = [[14,2],[5,0],[10,16],[12,17],[10,0],[6,13],[1,8],[16,5],[1,7],[3,1],[2,2],[13,16],[17,7]]),Polyhedron(vertices = [[14,2],[5,0],[10,16],[12,17],[10,0],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7]]),Polyhedron(vertices = [[14,2],[5,0],[10,16],[12,17],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7]]),Polyhedron(vertices = [[14,2],[5,0],[10,16],[12,17],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[17,3]]),Polyhedron(vertices = [[14,2],[5,0],[10,16],[12,17],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[6,13],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3],[17,7]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3],[17,7]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3],[17,7],[5,0]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,3],[17,7],[5,0],[7,14]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[5,0],[7,14]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[5,0],[7,14],[18,4]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[5,0],[7,14],[18,4],[18,3]]),Polyhedron(vertices = [[14,2],[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3]]),Polyhedron(vertices = [[10,16],[12,17],[1,8],[1,7],[3,1],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3]]),Polyhedron(vertices = [[10,16],[12,17],[1,8],[1,7],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3]]),Polyhedron(vertices = [[10,16],[12,17],[1,8],[1,7],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3],[15,0]]),Polyhedron(vertices = [[10,16],[12,17],[1,8],[1,7],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[5,0],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[0,3]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[12,0]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[2,2],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3]]),Polyhedron(vertices = [[10,16],[12,17],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1]]),Polyhedron(vertices = [[10,16],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1]]),Polyhedron(vertices = [[10,16],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14]]),Polyhedron(vertices = [[10,16],[1,7],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14],[3,2]]),Polyhedron(vertices = [[10,16],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14],[3,2]]),Polyhedron(vertices = [[10,16],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14],[3,2],[0,6]]),Polyhedron(vertices = [[10,16],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14],[0,6]]),Polyhedron(vertices = [[10,16],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[6,1],[4,14],[0,6],[3,2]]),Polyhedron(vertices = [[10,16],[13,16],[17,7],[18,4],[18,3],[15,0],[15,12],[13,0],[1,10],[2,3],[4,14],[0,6],[3,2]])]
sum = 0.
for p in list_19_1000:
	sum += float(p.volume())
print(sum/len(list_19_1000))
