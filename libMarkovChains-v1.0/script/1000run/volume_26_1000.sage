# COUNT ONLY UPDATED STATES WITH ADDING OR DELETION OF A VERTEX
# K=26, RUN=1000

list_26_1000 = [Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[1,5],[16,3],[2,0],[4,25],[2,22]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16],[14,2]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16],[14,2],[20,13]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16],[14,2],[20,13],[4,0]]),Polyhedron(vertices = [[18,5],[15,19],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16],[14,2],[20,13]]),Polyhedron(vertices = [[18,5],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[4,25],[2,22],[1,16],[14,2],[20,13]]),Polyhedron(vertices = [[18,5],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[2,22],[1,16],[14,2],[20,13]]),Polyhedron(vertices = [[18,5],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[2,22],[1,16],[14,2],[20,13],[17,19]]),Polyhedron(vertices = [[18,5],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[2,22],[1,16],[20,13],[17,19]]),Polyhedron(vertices = [[18,5],[10,1],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[2,22],[1,16],[20,13],[17,19],[14,2]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[6,25],[16,3],[2,0],[2,22],[1,16],[20,13],[17,19],[14,2]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[16,3],[2,0],[2,22],[1,16],[20,13],[17,19],[14,2]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0],[2,2]]),Polyhedron(vertices = [[18,5],[19,8],[9,24],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0],[7,22]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[20,13],[17,19],[14,2],[3,0],[7,22],[19,16]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[17,19],[14,2],[3,0],[7,22],[19,16]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[17,19],[14,2],[3,0],[7,22],[19,16],[15,20]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[17,19],[14,2],[3,0],[7,22],[19,16],[15,20],[2,3]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[1,16],[17,19],[14,2],[3,0],[7,22],[19,16],[2,3]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[14,2],[3,0],[7,22],[19,16],[2,3]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[7,22],[19,16],[2,3]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[7,22],[19,16],[2,3],[1,10]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10],[6,23]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10],[6,23],[11,24]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10],[6,23],[11,24],[5,0]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[16,3],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10],[6,23],[11,24],[5,0],[14,23]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[3,0],[19,16],[2,3],[1,10],[6,23],[11,24],[5,0],[14,23]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[1,10],[6,23],[11,24],[5,0],[14,23]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[14,23]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[14,3]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[14,3],[20,12]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[20,12]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[20,12],[10,0]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[2,3],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,18]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[2,22],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16]]),Polyhedron(vertices = [[18,5],[19,8],[1,12],[20,14],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16],[15,2]]),Polyhedron(vertices = [[19,8],[1,12],[20,14],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16],[15,2]]),Polyhedron(vertices = [[19,8],[1,12],[20,14],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16],[15,2],[7,24]]),Polyhedron(vertices = [[19,8],[1,12],[20,14],[17,19],[19,16],[6,23],[11,24],[5,0],[20,12],[10,0],[14,22],[0,16],[15,2],[7,24],[3,5]])]
sum = 0.
for p in list_26_1000:
	sum += float(p.volume())
print(sum/len(list_26_1000))
